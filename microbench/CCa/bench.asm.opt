	.arch armv8-a
	.file	"bench.c"
	.text
	.align	2
	.p2align 4,,15
	.global	loop
	.type	loop, %function
loop:
.LFB25:
	.cfi_startproc
	mov	w5, w0
	mov	w4, 32
	mov	w0, 0
	mov	w3, -5
	.p2align 3,,7
.L2:
	cmp	w5, 255
	mov	w2, w5
	bgt	.L5
	.p2align 3,,7
.L3:
	mul	w1, w0, w3
	add	w2, w2, 1
	cmp	w2, 256
	add	w1, w1, 1
	sub	w0, w0, w1
	bne	.L3
.L5:
	subs	w4, w4, #1
	bne	.L2
	ret
	.cfi_endproc
.LFE25:
	.size	loop, .-loop
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align	3
.LC0:
	.string	"Loop Seconds: %8.9f\n"
	.section	.text.startup,"ax",@progbits
	.align	2
	.p2align 4,,15
	.global	main
	.type	main, %function
main:
.LFB26:
	.cfi_startproc
	stp	x29, x30, [sp, -80]!
	.cfi_def_cfa_offset 80
	.cfi_offset 29, -80
	.cfi_offset 30, -72
	add	x1, sp, 48
	mov	x29, sp
	str	x19, [sp, 16]
	.cfi_offset 19, -64
	mov	w19, w0
	mov	w0, 4
	bl	clock_gettime
	mov	w0, 10000
	and	w0, w19, w0
	bl	loop
	mov	w19, w0
	add	x1, sp, 64
	mov	w0, 4
	bl	clock_gettime
	ldp	x2, x1, [sp, 48]
	ldp	x3, x0, [sp, 64]
	cmp	x1, x0
	ble	.L11
	sub	x3, x3, #1
	mov	x4, 51712
	movk	x4, 0x3b9a, lsl 16
	add	x0, x0, x4
	sub	x2, x3, x2
	sub	x1, x0, x1
.L12:
	scvtf	d1, x1
	adrp	x0, .LC1
	ldr	d2, [x0, #:lo12:.LC1]
	scvtf	d0, x2
	adrp	x0, .LC0
	add	x0, x0, :lo12:.LC0
	fmadd	d0, d1, d2, d0
	bl	printf
	str	w19, [sp, 44]
	mov	w0, 0
	ldr	x19, [sp, 16]
	ldp	x29, x30, [sp], 80
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret
.L11:
	.cfi_restore_state
	sub	x2, x3, x2
	sub	x1, x0, x1
	b	.L12
	.cfi_endproc
.LFE26:
	.size	main, .-main
	.section	.rodata.cst8,"aM",@progbits,8
	.align	3
.LC1:
	.word	-400107883
	.word	1041313291
	.ident	"GCC: (GNU Toolchain for the A-profile Architecture 10.2-2020.11 (arm-10.16)) 10.2.1 20201103"
	.section	.note.GNU-stack,"",@progbits
